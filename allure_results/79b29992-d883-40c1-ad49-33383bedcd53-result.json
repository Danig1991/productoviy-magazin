{"name": "Корректная передача данных.", "status": "failed", "statusDetails": {"message": "AssertionError: Ошибка: В поле 'Адрес доставки' значение: 'Гедеон'. Ожидаемое: 'пр. Волочаевский, д. 941 стр. 362'\nassert 'Гедеон' == 'пр. Волочаев... 941 стр. 362'\n  \n  - пр. Волочаевский, д. 941 стр. 362\n  + Гедеон", "trace": "shopper_auth = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b88163cf3652a022674ec08b8be97f93\")>, add_two_products = None\ngo_to_cart = None\n\n    @allure.epic(\"Тест оформления заказа.\")\n    @allure.title(\"Корректная передача данных.\")\n    def test_order_1(shopper_auth, add_two_products, go_to_cart):\n        driver = shopper_auth\n    \n        shopping_cart_page = ShoppingCartPage(driver)\n        user_data_page = UserDataPage(driver)\n        order_confirmation_page = OrderConfirmationPage(driver)\n    \n        user_data = UserData()\n        first_name = user_data.get_first_name()\n        last_name = user_data.get_last_name()\n        middle_name = user_data.get_middle_name()\n        address = user_data.get_address()\n        card_number = user_data.get_card_number()\n    \n        logging.info(\"Зафиксировать итоговую сумму.\")\n        expected_total_sum = shopping_cart_page.get_total_sum()\n    \n        logging.info(\"Нажать кнопку 'Оформить заказ'.\")\n        shopping_cart_page.click_button_place_order()\n    \n        logging.info(\"Заполнение полей корректными данными.\")\n        expected_first_name = user_data_page.add_first_name(first_name)\n        expected_last_name = user_data_page.add_last_name(last_name)\n        expected_middle_name = user_data_page.add_middle_name(middle_name)\n        expected_address = user_data_page.add_address(address)\n        expected_card_number = user_data_page.add_card_number(card_number)\n    \n        logging.info(\"Нажать кнопку 'Оформить заказ'.\")\n        user_data_page.click_button_place_order()\n    \n        logging.info(\"Сравнить ранее зафиксированные данные с данными на странице \"\n                     \"'Оформление заказа: Подтверждение заказа'.\")\n        expected_data = {\n            \"Имя\": expected_first_name,\n            \"Фамилия\": expected_last_name,\n            \"Отчество\": expected_middle_name,\n            \"Адрес доставки\": expected_address,\n            \"Номер карты\": expected_card_number,\n            \"Итоговая стоимость\": expected_total_sum\n        }\n        current_data = order_confirmation_page.get_order_confirmation_data()\n    \n        for key in expected_data:\n>           assert current_data[key] == expected_data[key], (\n                f\"Ошибка: В поле '{key}' значение: '{current_data[key]}'. \"\n                f\"Ожидаемое: '{expected_data[key]}'\"\n            )\nE           AssertionError: Ошибка: В поле 'Адрес доставки' значение: 'Гедеон'. Ожидаемое: 'пр. Волочаевский, д. 941 стр. 362'\nE           assert 'Гедеон' == 'пр. Волочаев... 941 стр. 362'\nE             \nE             - пр. Волочаевский, д. 941 стр. 362\nE             + Гедеон\n\ntests\\test_order.py:60: AssertionError"}, "steps": [{"name": "Получить итоговую сумму", "status": "passed", "start": 1750770058571, "stop": 1750770058888}, {"name": "Нажать кнопку 'Оформить заказ'", "status": "passed", "start": 1750770058888, "stop": 1750770059211}, {"name": "Добавить имя", "status": "passed", "parameters": [{"name": "first_name", "value": "'Гедеон'"}], "start": 1750770059213, "stop": 1750770059266}, {"name": "Добавить фамилию", "status": "passed", "parameters": [{"name": "last_name", "value": "'Овчинников'"}], "start": 1750770059267, "stop": 1750770059316}, {"name": "Добавить отчество", "status": "passed", "parameters": [{"name": "middle_name", "value": "'Ефстафьевич'"}], "start": 1750770059317, "stop": 1750770059365}, {"name": "Добавить адрес доставки", "status": "passed", "parameters": [{"name": "address", "value": "'пр. Волочаевский, д. 941 стр. 362'"}], "start": 1750770059365, "stop": 1750770059430}, {"name": "Добавить номер карты", "status": "passed", "parameters": [{"name": "card_number", "value": "'8065 1632 2656 3117'"}], "start": 1750770059430, "stop": 1750770059483}, {"name": "Нажать кнопку 'Оформить заказ'", "status": "passed", "start": 1750770059483, "stop": 1750770059828}, {"name": "Получить данные для подтверждения заказа", "status": "passed", "start": 1750770059829, "stop": 1750770059926}], "attachments": [{"name": "log", "source": "ae764c1e-cf21-44b3-94ba-65454f0d0c3d-attachment.txt", "type": "text/plain"}], "start": 1750770058570, "stop": 1750770059926, "uuid": "cacaf2e0-b86c-4733-89cb-a6a5668f843f", "historyId": "5ee447ec73dc7e9dbea737a85d4cd71d", "testCaseId": "5ee447ec73dc7e9dbea737a85d4cd71d", "fullName": "tests.test_order#test_order_1", "labels": [{"name": "epic", "value": "Тест оформления заказа."}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "host", "value": "Msi"}, {"name": "thread", "value": "16028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}